version: "3.9"

networks: 
  lab:
    driver: bridge

volumes:
  sonarqube_data: {}
  sonarqube_extensions: {}
  sonarqube_logs: {}
  sonarqube_conf: {}
  postgresql: {}
  postgresql_data: {}
  pgadmin_data: {}

services:
  analyze:
    image: sonarqube:9.4.0-community
    hostname: analyze
    container_name: analyze
    domainname: lab.docker.oci
    restart: on-failure:3
    user: sonarqube
    command: "-Dhttp.proxyHost=proxy.local.com -Dhttp.proxyPort=3128"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: postgres
      SONAR_JDBC_PASSWORD: test12321
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    healthcheck:
      test: ["CMD", "nc", "-zvw5", "analyze:9000"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "19000:9000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - lab

  db:
    image: postgres:14.5-alpine3.16
    hostname: db
    container_name: db
    domainname: lab.docker.oci
    restart: on-failure:3
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test12321
      POSTGRES_MULTIPLE_DATABASES: sonar
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
      - ./multiple-databases.sh:/docker-entrypoint-initdb.d/multiple-databases.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "18000:5432"
    networks:
      - lab

  pgadmin:
    image: dpage/pgadmin4
    hostname: pgadmin
    container_name: pgadmin
    domainname: lab.docker.oci
    restart: on-failure:3
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "17000:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - lab
